-- 接口
    https://www.showdoc.cc/128719739414963?page_id=2513235043485226

-- 
    - 新增文件
      - index         首页
      - auth          授权
      - cart          购物车
      - category      商品分类
      - collect       商品收藏
      - feedback      意见反馈
      - goods_detail　商品详情
    　- goods_list    商品列表
      - login         登录授权
      - order         订单
      - pay           支付
      - search        搜索
      - user          个人中心

    - 配置tabbar 
      - app.json
      - 设置tabbar图标
    - 添加搜索searchinput 组件（静态样式）
    - css样式声明
      - 颜色多次被使用：--themeColor:#EA434F;
    - 封装promise，防止回调地狱
      - 增加请求提示
      - 添加全局正在加载中图标效果（放入请求函数）

      -- 坑：
        - 如果一个页面同时调用三个接口，显示的图标出现一次（正常），但是一个请求回来了就做了关闭图标，那后两个请求数据还没回来怎么办 ，因此
          页面效果就对应不上了   
        - 针对同时发送请求代码（直接在complete关闭"正在加载中"不合适）（必须是三个请求数据都请求回来了才关闭图标）
        - 解决：增加技术变量 ：调用时++ ，请求回来时—-，直到等于0时才将图标关闭
        
   - swiper/分类导航，数据获取
      - 获取取数据通过 wx:for = “{{}}” 渲染页面
-- 
    - 楼层 （楼层样式处理）

    - 分类
        - 获取数据（商品分类的数据过大，每次请求的话会消耗性能，通过缓存技术提高用户体验）
        - 将数据放入全局变量，根据数据对其进行过滤
        - wx.getStorageSync wx.setSotrageSync 本地存储
-- 
    - 接口调整（封装统一的接口）
    - es7 async 
      - 部分机型会有兼容性问题，在不考虑兼容性问题下使用
      - 配置
          - 下载 runtime.js
          - 放入lib文件夹
          - 在需要使用async页面引入（只需引入） import regeneratorRuntime from'../../utils/runtime.js'

    - 商品列表跳转
    - 自定义tabs组件（设置组件数据，组件父子通信）
    - 获取商品列表/渲染列表
    - 处理没图片的场景
    - 商品上拉触底加载下一页，上拉刷新
      onPullDownRefresh 下拉动作
      onReachBottom     上拉触底

-- 商品详情
  - 商品列表某一项跳转商品详情
  - 数据请求
  - 页面渲染
    - 轮播图
  - 优化页面要渲染的属性：（数据过滤）小程序建议data里面只存放标签中需要使用的数据，用不到的数据会无形中导致小程序的性能变的比较卡了
  - 小程序中有些格式iPhone暂不支持：比如:80.q.webp(后台处理或前端暂时性处理)
  - 商品详情图片放大预览，调用previewImage
  - 商品详情底部工具栏
  - 加入购物车 （利用本地存储模拟）
  - 详情跳转购物车踩坑：忘记了tabbar页从navigate中不能跳转，解决：加入配置，open-type="switchTab"

-- 购物车
      - 获取收获地址
      - 封装微信的promise(方便维护，统一管理)
      - 购物车静态页面
      - 购物车数据渲染
      - 全选效果（计算全选）
      - 总数量与总价格
      - 商品选中
      - 全选与反选
      - 商品数量编辑、商品删除，
      - 点击结算（没有商品的相关提示）

-- 支付
  - 支付页商品信息显示（数据渲染）
  - 订单创建分析
    -- 获取订单编号（首先得先拿到用户登录成功后token值）
    -- 调用微信支付
    -- 支付成功之后清除已购买的数据
    -- 跳转到订单页面
  - 封装统一的请求头信息
    - 先接收原有的请求头信息（前面请求都没有请求头,为后期需要时做准备）
    - 如果路径中包含 /my/则加上请求头
     

-- 个人中心
  - 登录获取用户信息
  - 静态页面
  - 订单查询，订单渲染
      

-- 商品收藏
  - 商品详情页点击收藏
  - 个人中心页，显示商品收藏的数量/点击跳转到商品收藏页面
  - 商品收藏页面（列表）

-- 搜索中心
  - 模糊查询
  - 防抖实现
  - 按钮取消重置数据

-- 意见反馈页
  - 静态页面
  - 调用微信接口上传图片
  - 图片删除
  - 提交
